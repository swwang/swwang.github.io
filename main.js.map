{"version":3,"file":"main.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;AACjB;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./ts/index.ts"],"sourcesContent":["var Id;\n(function (Id) {\n    const rsvp = \"rsvp\";\n    const schedule = \"schedule\";\n    const story = \"story\";\n    const party = \"party\";\n    const gettingAround = \"getting-around\";\n    const forFun = \"for-fun\";\n    const faqs = \"faqs\";\n    const language = \"language\";\n    Id.sectionIds = [rsvp, schedule, story, party, gettingAround, forFun, faqs, language];\n    function getSection(id) {\n        return document.getElementById(id);\n    }\n    Id.getSection = getSection;\n    function getButton(id) {\n        return document.getElementById(id + \"-button\");\n    }\n    Id.getButton = getButton;\n    function getInfo() {\n        return document.getElementById(\"info\");\n    }\n    Id.getInfo = getInfo;\n    function getArrow() {\n        return document.getElementById(\"arrow\");\n    }\n    Id.getArrow = getArrow;\n    function getClose() {\n        return document.getElementById(\"close\");\n    }\n    Id.getClose = getClose;\n})(Id || (Id = {}));\nvar Recs;\n(function (Recs) {\n    const bayArea = [];\n})(Recs || (Recs = {}));\nfunction smallScreen() {\n    return window.innerWidth < 1024;\n}\nfunction hasOverflow(elm) {\n    return elm.scrollHeight > elm.clientHeight;\n}\nlet currentSection = \"\";\nlet stickySection = \"\";\nlet english = true;\nfunction hideSection(id) {\n    let section = Id.getSection(id);\n    section.style.opacity = \"0\";\n    section.style.display = \"none\";\n    document.getElementById(\"info\").style.display = \"none\";\n    if (currentSection === id) {\n        currentSection = \"\";\n    }\n    if (stickySection === id) {\n        stickySection = \"\";\n    }\n    checkArrow();\n}\nfunction selectSection(id) {\n    if (id === stickySection) {\n        hideSection(stickySection);\n        stickySection = \"\";\n        currentSection = \"\";\n        return;\n    }\n    if (stickySection !== \"\") {\n        hideSection(stickySection);\n    }\n    stickySection = id;\n    showSection(id);\n}\nfunction showSection(id) {\n    if (id === currentSection) {\n        return;\n    }\n    if (stickySection !== \"\" && stickySection !== id) {\n        return;\n    }\n    if (currentSection !== \"\") {\n        hideSection(currentSection);\n    }\n    let section = Id.getSection(id);\n    document.getElementById(\"info\").style.display = \"block\";\n    section.style.display = \"block\";\n    setTimeout(() => {\n        section.style.opacity = smallScreen() ? \"1\" : \"0.9\";\n    }, 1);\n    currentSection = id;\n    console.log(currentSection);\n    checkArrow();\n}\nfunction showButton(id, delay, offset, onClick, onMouse) {\n    const button = Id.getButton(id);\n    setTimeout(() => {\n        button.style.visibility = \"visible\";\n        button.style.left = offset + \"%\";\n        button.onclick = onClick;\n        if (onMouse) {\n            button.onmouseover = onMouse;\n        }\n    }, delay);\n}\nfunction checkArrow() {\n    let section = Id.getSection(currentSection);\n    let arrow = Id.getArrow();\n    let close = Id.getClose();\n    if (!section) {\n        arrow.style.display = \"none\";\n        close.style.display = \"none\";\n        return;\n    }\n    if (hasOverflow(section)) {\n        arrow.style.display = \"block\";\n    }\n    else {\n        arrow.style.display = \"none\";\n    }\n    close.style.display = \"block\";\n}\nfunction setDisplay(collection, display) {\n    for (let i = 0; i < collection.length; ++i) {\n        collection[i].style.display = display;\n    }\n}\nfunction toggleLanguage() {\n    if (english) {\n        setDisplay(document.getElementsByClassName(\"en\"), \"none\");\n        setDisplay(document.getElementsByClassName(\"zh\"), \"inline-block\");\n    }\n    else {\n        setDisplay(document.getElementsByClassName(\"zh\"), \"none\");\n        setDisplay(document.getElementsByClassName(\"en\"), \"inline-block\");\n    }\n    checkArrow();\n    english = !english;\n}\nfunction start() {\n    let delay = 0;\n    let offset = 10;\n    for (const id of Id.sectionIds) {\n        showButton(id, delay, offset, () => {\n            if (id === \"language\") {\n                toggleLanguage();\n            }\n            else {\n                selectSection(id);\n            }\n        }, () => {\n            if (id !== \"language\" && window.innerWidth > 1024) {\n                showSection(id);\n            }\n        });\n        delay += 200;\n        if (offset <= 0) {\n            offset = 10;\n        }\n        else {\n            offset -= 5;\n        }\n    }\n    let close = Id.getClose();\n    close.onclick = () => {\n        hideSection(currentSection);\n    };\n    if (!smallScreen()) {\n        let welcome = Id.getSection(\"welcome\");\n        showSection(\"welcome\");\n    }\n}\nstart();\n"],"names":[],"sourceRoot":""}